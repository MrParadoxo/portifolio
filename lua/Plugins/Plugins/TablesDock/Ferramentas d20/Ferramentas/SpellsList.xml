<?xml version="1.0" encoding="UTF-8"?>
<form name="frmSpellsList" align="client">
	<scrollBox align="client">
		<recordList align="top" height="260" field="spellList" name="spellList" templateForm="frmSpellItem" autoHeight="true">
			<event name="onCompare">
				return Utils.compareStringPtBr(nodeA.name, nodeB.name);
	    	</event>
		</recordList>
	</scrollBox>

	<layout align="bottom" height="25">
		<button align="left" horzTextAlign="center" width="150" text="Anterior">
			<event name="onClick">
				-- Verifica se ta na primeira pagina
				if self.scope.node==nil then return end;
				if toolSheet.SpellsPage==nil then return end;

				if toolSheet.SpellsPage==1 then return end;

				-- Apaga pagina atual
				local toDelete = NDB.getChildNodes(toolSheet.spellList); 
			    for i=1, #toDelete, 1 do
			        NDB.deleteNode(toDelete[i]);
			    end;

				-- Passa para a pagina anterior
				toolSheet.SpellsPage = toolSheet.SpellsPage - 1;

				local first = ((toolSheet.SpellsPage-1)*50)+1;
				local last = math.min(toolSheet.SpellsPage*50, toolSheet.numSpells);

				for i=first, last, 1 do
					local spell = self.spellList:append();

					if toolSheet.filteredSpells[i].description then 
						spell.description = toolSheet.filteredSpells[i].description;
					end;

					spell.name = toolSheet.filteredSpells[i].name;
					local nome = tryLang(toolSheet.filteredSpells[i].name);
					if nome ~= nil then spell.name = spell.name .. " - " .. nome end;

					spell.school = trans(toolSheet.filteredSpells[i].school);
					spell.subschool = trans(toolSheet.filteredSpells[i].subschool);
					spell.url = toolSheet.filteredSpells[i].url;
					spell.level = classToText(toolSheet.filteredSpells[i].level);
					spell.descriptor = "Descritores: " .. arrayToText(toolSheet.filteredSpells[i].descriptor, #tags);
					spell.components = "Componentes: " .. arrayToText(toolSheet.filteredSpells[i].components, #components);
					spell.range = "Alcance: " .. trans(toolSheet.filteredSpells[i].range);
					spell.duration = "Duração: " .. arrayToText(toolSheet.filteredSpells[i].duration, #durations);
					spell.aiming = "Alvo: " .. arrayToText(toolSheet.filteredSpells[i].aiming, #targets);
					spell.save = "Resistência: " .. arrayToText(toolSheet.filteredSpells[i].save, #trs);
					spell.sr = "RM: " .. arrayToText(toolSheet.filteredSpells[i].sr, #srs);
					spell.book = "Livro: " .. arrayToText(toolSheet.filteredSpells[i].book, #books);
				end;
				self.spellList:sort();
			</event>
		</button>

		<label align="left" field="SpellsPage" width="25" horzTextAlign="center"/>
		<label align="left" text="/" width="25" horzTextAlign="center"/>
		<label align="left" field="maxSpellPages" width="25" horzTextAlign="center"/>

		<button align="left" horzTextAlign="center" width="150" text="Proximo">
			<event name="onClick">
				-- Verifica se ta na ultima pagina
				if self.scope.node==nil then return end;
				if toolSheet.SpellsPage==nil then return end;

				if toolSheet.SpellsPage>=toolSheet.maxSpellPages then return end;

				-- Apaga pagina atual
				local toDelete = NDB.getChildNodes(toolSheet.spellList); 
			    for i=1, #toDelete, 1 do
			        NDB.deleteNode(toDelete[i]);
			    end;

				-- Passa para a proxima pagina
				toolSheet.SpellsPage = toolSheet.SpellsPage + 1;

				local first = ((toolSheet.SpellsPage-1)*50)+1;
				local last = math.min(toolSheet.SpellsPage*50, toolSheet.numSpells);

				for i=first, last, 1 do
					local spell = self.spellList:append();

					if toolSheet.filteredSpells[i].description then 
						spell.description = toolSheet.filteredSpells[i].description;
					end;
					
					spell.name = toolSheet.filteredSpells[i].name;
					local nome = tryLang(toolSheet.filteredSpells[i].name);
					if nome ~= nil then spell.name = spell.name .. " - " .. nome end;

					spell.school = trans(toolSheet.filteredSpells[i].school);
					spell.subschool = trans(toolSheet.filteredSpells[i].subschool);
					spell.url = toolSheet.filteredSpells[i].url;
					spell.level = classToText(toolSheet.filteredSpells[i].level);
					spell.descriptor = "Descritores: " .. arrayToText(toolSheet.filteredSpells[i].descriptor, #tags);
					spell.components = "Componentes: " .. arrayToText(toolSheet.filteredSpells[i].components, #components);
					spell.range = "Alcance: " .. trans(toolSheet.filteredSpells[i].range);
					spell.duration = "Duração: " .. arrayToText(toolSheet.filteredSpells[i].duration, #durations);
					spell.aiming = "Alvo: " .. arrayToText(toolSheet.filteredSpells[i].aiming, #targets);
					spell.save = "Resistência: " .. arrayToText(toolSheet.filteredSpells[i].save, #trs);
					spell.sr = "RM: " .. arrayToText(toolSheet.filteredSpells[i].sr, #srs);
					spell.book = "Livro: " .. arrayToText(toolSheet.filteredSpells[i].book, #books);
				end;
				self.spellList:sort();

				-- Atualiza o tamanho do rcl
				local spells = NDB.getChildNodes(toolSheet.spellList); 
        		self.spellList.height = #spells * 101;
			</event>
		</button>
	</layout>
</form>