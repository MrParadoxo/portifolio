<?xml version="1.0" encoding="UTF-8"?>
<form name="frmNaveGeneral" align="client" theme="dark">
	<scrollBox align="client">
		<layout height="610"/>
		<layout align="left" width="765" margins="{bottom=5}">
			<layout align="top" height="200" margins="{bottom=5}">
				<rectangle align="left" width="200" color="black" strokeColor="white" strokeSize="1" margins="{right=5}">
					<image align="client" field="avatarComp" editable="true" style="autoFit">
						<event name="OnStartDrag">
							drag:addData("imageURL", sheet.avatarComp);
						</event>
					</image>
				</rectangle>

				<rectangle align="left" width="210" color="black" strokeColor="white" strokeSize="1" margins="{right=5}">
					<layout align="top" height="50">
						<layout align="left" width="5"/>
						<VertLabelEdit text="Nome" field="nome" width="95" fontSize="13"/>
						<VertLabelEdit text="Modelo" field="modelo" width="95" fontSize="13"/>
					</layout>
					<layout align="top" height="50">
						<layout align="left" width="5"/>
						<VertLabelEdit text="Ranque" field="ranque" width="95" fontSize="13"/>
						<VertLabelLabel text="Class. Deriva" field="deriva_class" width="95" fontSize="13"/>
					</layout>
					<layout align="top" height="50">
						<layout align="left" width="5"/>
						<VertLabelLabel text="Manobra" field="manobra" width="145" fontSize="13"/>
						<VertLabelLabel text="Velocidade" field="velocidade" width="45" fontSize="9"/>
					</layout>
					<layout align="top" height="50">
						<layout align="left" width="5"/>
						<VertLabelCombo text="Tamanho" field="tamanho" width="95" fontSize="13" items="{'Minúsculo', 'Pequeno', 'Médio', 'Grande', 'Enorme', 'Imenso', 'Colossal'}" values="{'1','2','3','4','5','6','7'}"/>
						<VertLabelCombo text="Plataforma" field="plataforma" width="95" fontSize="13" items="{}" values="{}"/>
					</layout>
				</rectangle>

				<rectangle align="left" width="340" color="black" strokeColor="white" strokeSize="1" margins="{right=5}">
					<layout align="top" height="50">
						<layout align="left" width="5"/>
						<VertLabelLabel text="CA" field="ca" width="60" fontSize="13"/>
						<VertLabelEdit text="Piloto" field="ca_piloto" width="60" fontSize="13"/>
						<VertLabelLabel text="Armadura" field="ca_armadura" width="60" fontSize="13"/>
						<VertLabelLabel text="Tamanho" field="ca_tamanho" width="60" fontSize="13"/>
						<VertLabelEdit text="Outros" field="ca_outros" width="60" fontSize="13"/>
					</layout>
					<layout align="top" height="50">
						<layout align="left" width="5"/>
						<VertLabelLabel text="TM" field="tm" width="60" fontSize="13"/>
						<VertLabelEdit text="Piloto" field="ca_piloto" width="60" fontSize="13"/>
						<VertLabelLabel text="Contramedidas" field="tm_contramedidas" width="60" fontSize="8"/>
						<VertLabelLabel text="Tamanho" field="ca_tamanho" width="60" fontSize="13"/>
						<VertLabelEdit text="Outros" field="tm_outros" width="60" fontSize="13"/>
					</layout>
					<layout align="top" height="50">
						<layout align="left" width="5"/>
						<VertLabelLabel text="Casco" field="casco" width="60" fontSize="13"/>
						<VertLabelLabel text="LD" field="casco_ld" width="60" fontSize="13"/>
						<VertLabelLabel text="LC" field="casco_lc" width="60" fontSize="13"/>
					</layout>
					<layout align="top" height="50">
						<layout align="left" width="5"/>
						<VertLabelLabel text="Escudo" field="escudo_total" width="60" fontSize="13"/>
						<VertLabelEdit text="Proa" field="escudo_proa" width="60" fontSize="13"/>
						<VertLabelEdit text="Popa" field="escudo_popa" width="60" fontSize="13"/>
						<VertLabelEdit text="Bombordo" field="escudo_bombordo" width="60" fontSize="11"/>
						<VertLabelEdit text="Estibordo" field="escudo_estibordo" width="60" fontSize="11"/>
					</layout>
				</rectangle>
			</layout>
			<layout align="top" height="200" margins="{bottom=5}">
				<rectangle align="left" width="380" color="black" strokeColor="white" strokeSize="1" margins="{right=5}" padding="{top=5,bottom=5}">
					<layout align="top" height="20">
						<button align="left" width="20" height="20" text="+" margins="{left=5}" onClick="self.rclReatores:append();"/>
						<label align="left" text="Núcleos de Energia" width="200" margins="{left=5}"/>
					</layout>
					<recordList name="rclReatores" field="listaReatores" templateForm="frmReactorPart" align="client" width="465" margins="{left=5,right=5}" layout="vertical" minQt="1"/>
				</rectangle>
				<rectangle align="left" width="375" color="black" strokeColor="white" strokeSize="1" margins="{right=5}" padding="{top=5,bottom=5}">
					<layout align="top" height="20">
						<button align="left" width="20" height="20" text="+" margins="{left=5}" onClick="self.rclExpansao:append();"/>
						<label align="left" text="Compatimentos de Expansão" width="200" margins="{left=5}"/>
					</layout>
					<recordList name="rclExpansao" field="listaExpansao" templateForm="frmShipPart" align="client" width="465" margins="{left=5,right=5}" layout="vertical" minQt="1"/>
				</rectangle>
			</layout>
			<layout align="top" height="200" margins="{bottom=5}">
				<rectangle align="left" width="650" color="black" strokeColor="white" strokeSize="1" margins="{right=5}" padding="{top=5,bottom=5}">
					<textEditor align="client" field="detalhes" margins="{left=5,right=5,top=0}"/>
				</rectangle>
				<rectangle align="left" width="105" color="black" strokeColor="white" strokeSize="1" margins="{right=5}" padding="{top=2.5,bottom=2.5}">
					<layout align="top" height="50">
						<layout align="left" width="5"/>
						<VertCheckEditOrLLabel text="Valor" field="preco" width="95" fontSize="13" formatFloat=",0 C"/>
					</layout>
					<layout align="top" height="50">
						<layout align="left" width="5"/>
						<VertCheckEditOrLLabel text="Peso Máximo" field="peso" width="95" fontSize="12" formatFloat=",0.# Tons"/>
					</layout>
					<layout align="top" height="50">
						<layout align="left" width="5"/>
						<VertLabelEdit text="Volume" field="volume" width="95" fontSize="13"/>
					</layout>
					<layout align="top" height="50">
						<layout align="left" width="5"/>
						<VertLabelLabel text="Danos Críticos" field="danos" width="95" fontSize="11"/>
					</layout>
				</rectangle>
			</layout>
		</layout>
		<layout align="left" width="500" margins="{bottom=5}">
			<layout align="top" height="405" margins="{bottom=5}">
				<rectangle align="client" width="500" color="black" strokeColor="white" strokeSize="1" margins="{right=5}" padding="{top=5,bottom=5}">
					<layout align="top" height="50">
						<layout align="left" width="5"/>
						<VertTriLabel text="PF" field="fabricacao" width="115" width2="57.5" fontSize="13"/>
						<VertTriLabel text="UNE" field="energia" width="115" width2="57.5" fontSize="13"/>
						<VertTriLabel text="Comp. Expansão" field="expansao" width="115" width2="57.5" fontSize="11"/>
						<VertTriLabel text="Tripulação" field="tripulacao" width="115" width2="57.5" fontSize="13"/>
					</layout>
					<layout align="top" height="50">
						<layout align="left" width="5"/>
						<VertTriLabel text="Blocos" field="blocos" width="300" width2="150" fontSize="13" formatFloat=",0"/>
						<VertLabelTriEdit text="Dimensões (q)" field="dimensoes" width="180" width2="60" fontSize="13"/>
					</layout>
					<layout align="top" height="50">
						<layout align="left" width="5"/>
						<VertLabelCombo text="Escudo" field="escudo" width="115" fontSize="13" items="{'-', 'Básico 10', 'Básico 20', 'Básico 30', 'Básico 40', 'Leve 50', 'Leve 60', 'Leve 70', 'Leve 80', 'Médio 90', 'Médio 100', 'Médio 120', 'Médio 140', 'Médio 160', 'Médio 200', 'Pesado 240', 'Pesado 280', 'Pesado 320', 'Pesado 360', 'Pesado 420', 'Pesado 480', 'Superior 540', 'Superior 600'}" values="{'0','1','2','3','4','5','6','7','8','9','10','11','12','13','14','15','16','17','18','19','20','21','22'}"/>
						<VertLabelCombo text="Armadura" field="armadura" width="115" fontSize="13" items="{'-','md 1','md 2','md 3','md 4','md 5','md 6','md 7','md 8','md 9','md 10','md 11','md 12','md 13','md 14','md 15'}" values="{'0','1','2','3','4','5','6','7','8','9','10','11','12','13','14','15'}"/>
						<VertLabelCombo text="Contramedidas" field="contramedidas" width="115" fontSize="13" items="{'-','md 1','md 2','md 3','md 4','md 5','md 6','md 7','md 8','md 9','md 10','md 11','md 12','md 13','md 14','md 15'}" values="{'0','1','2','3','4','5','6','7','8','9','10','11','12','13','14','15'}"/>
						<VertLabelCombo text="Computador" field="computador" width="115" fontSize="13" items="{'Básico', 'Mono md 1', 'Duo md 1', 'Tri md 1', 'Tetra md 1', 'Mono md 2', 'Duo md 2', 'Tri md 2', 'Tetra md 2', 'Mono md 3', 'Duo md 3', 'Tri md 3', 'Tetra md 3', 'Mono md 4', 'Duo md 4', 'Tri md 4', 'Mono md 5', 'Duo md 5', 'Tri md 5', 'Mono md 6', 'Duo md 6', 'Mono md 7', 'Duo md 7', 'Mono md 8', 'Duo md8 +8', 'Mono md 9', 'Duo md 9', 'Mono md 10', 'Duo md 10'}" values="{'0_0', '1_1', '2_1', '3_1', '4_1', '1_2', '2_2', '3_2', '4_2', '1_3', '2_3', '3_3', '4_3', '1_4', '2_4', '3_4', '1_5', '2_5', '3_5', '1_6', '2_6', '1_7', '2_7', '1_8', '2_8', '1_9', '2_9', '1_10', '2_10'}"/>
					</layout>
					<layout align="top" height="50">
						<layout align="left" width="5"/>
						<VertLabelCombo text="Propulsor" field="propulsor" width="115" fontSize="13" items="{}" values="{}"/>
						<VertLabelCombo text="Deriva" field="deriva" width="115" fontSize="13" items="{}" values="{}"/>
						<VertLabelCombo text="Sensor" field="sensor" width="115" fontSize="13" items="{'Mixaria', 'Barato Curto', 'Básico Curto', 'Avançado Curto', 'Barato Médio', 'Básico Médio', 'Avançado Médio', 'Barato Longo', 'Básico Longo', 'Avançado Longo'}" values="{'0','1','2','3','4','5','6','7','8','9'}"/>
						<layout align="left" width="115">
							<checkBox align="top" height="25" text="PC Extra" field="opt_pc" margins="{right=5}"/>
							<checkBox align="top" height="25" text="Tripulação Extra" field="opt_trip" margins="{right=5}"/>
						</layout>
					</layout>
					<layout align="top" height="50">
						<layout align="left" width="5"/>
						<VertLabelCombo text="Anti-Hack" field="sec_hack" width="115" fontSize="13" items="{'-','x1','x2','x3','x4'}" values="{'0','1','2','3','4'}"/>
						<VertLabelCombo text="Grade de Choque" field="sec_choque" width="115" fontSize="13" items="{'-','x1','x2','x3','x4'}" values="{'0','1','2','3','4'}"/>
					</layout>
					<layout align="top" height="25">
						<layout align="left" width="5"/>
						<checkBox align="left" width="115" text="Tranca Biométrica" field="sec_tranca" margins="{right=5}" fontSize="11"/>
						<checkBox align="left" width="115" text="Autodestruição" field="sec_autodest" margins="{right=5}"/>
						<checkBox align="left" width="115" text="Alarme" field="sec_alarm" margins="{right=5}"/>
						<checkBox align="left" width="115" text="Bloqueio" field="sec_lockout" margins="{right=5}"/>
					</layout>
					<layout align="top" height="25">
						<layout align="left" width="5"/>
						<checkBox align="left" width="115" text="Interface Falsa" field="sec_shell" margins="{right=5}"/>
						<checkBox align="left" width="115" text="Formatar Dados" field="sec_wipe" margins="{right=5}"/>
						<checkBox align="left" width="115" text="Contravírus" field="sec_feedback" margins="{right=5}"/>
						<checkBox align="left" width="115" text="Firewall" field="sec_firewall" margins="{right=5}"/>
					</layout>
					<horzLine align="top" height="1" strokeSize="1"/>
					<layout align="top" height="50">
						<layout align="left" width="5"/>
						<VertLabelCombo text="Suporte de Vida" field="status_vida" width="115" fontSize="13" items="{'Nominal','Falhando','Mal Funcionamento', 'Avariado'}" values="{'0','1','2','3'}"/>
						<VertLabelCombo text="Sensores" field="status_sensores" width="115" fontSize="13"  items="{'Nominal','Falhando','Mal Funcionamento', 'Avariado'}" values="{'0','1','2','3'}"/>
						<VertLabelCombo text="Motores" field="status_motores" width="115" fontSize="13"  items="{'Nominal','Falhando','Mal Funcionamento', 'Avariado'}" values="{'0','1','2','3'}"/>
						<VertLabelCombo text="Núcleo de Energia" field="status_reator" width="115" fontSize="13"  items="{'Nominal','Falhando','Mal Funcionamento', 'Avariado'}" values="{'0','1','2','3'}"/>
					</layout>
					<layout align="top" height="50">
						<layout align="left" width="5"/>
						<VertLabelCombo text="Armas Proa" field="status_proa" width="115" fontSize="13"  items="{'Nominal','Falhando','Mal Funcionamento', 'Avariado'}" values="{'0','1','2','3'}"/>
						<VertLabelCombo text="Armas Popa" field="status_popa" width="115" fontSize="13"  items="{'Nominal','Falhando','Mal Funcionamento', 'Avariado'}" values="{'0','1','2','3'}"/>
						<VertLabelCombo text="Armas Bombordo" field="status_bombordo" width="115" fontSize="13"  items="{'Nominal','Falhando','Mal Funcionamento', 'Avariado'}" values="{'0','1','2','3'}"/>
						<VertLabelCombo text="Armas Estibordo" field="status_estibordo" width="115" fontSize="13"  items="{'Nominal','Falhando','Mal Funcionamento', 'Avariado'}" values="{'0','1','2','3'}"/>
					</layout>
					
				</rectangle>
			</layout>
			<layout align="top" height="200" margins="{bottom=5}">
				<rectangle align="client" width="340" color="black" strokeColor="white" strokeSize="1" margins="{right=5}" padding="{top=5,bottom=5}">
					<layout align="top" height="20">
						<button align="left" width="20" height="20" text="+" margins="{left=5}" onClick="self.rclInv:append();"/>
						<label align="left" text="Inventario" width="100" margins="{left=5}"/>
					</layout>
					<layout align="bottom" height="20" margins="{top=5}">
						<label left="5" top="0" width="50" height="20" text="Vol"/>
						<rectangle left="25" top="0" width="70" height="20" color="black" strokeColor="white" strokeSize="1"/>
						<label vertTextAlign="center" horzTextAlign="center" left="25" top="0" width="70" height="20" field="pesoInv" formatFloat=",0.##"/>
						<label left="105" top="0" width="50" height="20" text="$"/>
						<rectangle left="120" top="0" width="91" height="20" color="black" strokeColor="white" strokeSize="1"/>
						<label vertTextAlign="center" horzTextAlign="center" left="120" top="0" width="91" height="20" field="precoInv"  formatFloat=",0.## C"/>
					</layout>

					<recordList name="rclInv" field="listaInv" templateForm="frmVehicleItem" align="client" width="465" margins="{left=5,right=5}" layout="vertical" minQt="1"/>
				</rectangle>
			</layout>
		</layout>
	</scrollBox>

	<dataLink field="tamanho">
		<event name="onChange">
			if sheet==nil then return end;
			local tamanho = tonumber(sheet.tamanho) or 1;

			-- Bonus CA e TL
			local ca_tl = {2, 1, 0, -1, -2, -4, -8};
			sheet.ca_tamanho = ca_tl[tamanho];

			-- Núcleos de Energia disponiveis
			local reatores = NDB.getChildNodes(sheet.listaReatores);
			for i=1, #reatores, 1 do
				reatores[i].tamanho = tamanho;
			end;

			-- Propulsores disponiveis

			local items = {n1_6="Mn6",n1_8="Mn8",n1_10="Mn10",n1_12="Mn12",n1_14="Mn14",n2_6="P6",n2_8="P8",n2_10="P10",n2_12="P12",n3_4="M4",n3_6="M6",n3_8="M8",n3_10="M10",n3_12="M12",n4_4="G4",n4_6="G6",n4_8="G8",n4_10="G10",n5_4="E4",n5_6="E6",n5_8="E8",n5_10="E10",n6_4="I4",n6_6="I6",n6_8="I8",n7_4="C4",n7_6="C6",n7_8="C8"};
			local values = {};
			local current = items["n"..(sheet.propulsor or "")];

			if tamanho == 1 then
				-- Mn
				items = {'Mn6','Mn8','Mn10','Mn12','Mn14'};
				values = {'1_6','1_8','1_10','1_12','1_14'};
			elseif tamanho == 2 then
				-- P
				items = {'P6','P8','P10','P12'};
				values = {'2_6','2_8','2_10','2_12'};
			elseif tamanho == 3 then
				-- M
				items = {'M4','M6','M8','M10','M12'};
				values = {'3_4','3_6','3_8','3_10','3_12'};

			elseif tamanho == 4 then
				-- G
				items = {'G4','G6','G8','G10'};
				values = {'4_4','4_6','4_8','4_10'};
			elseif tamanho == 5 then
				-- E
				items = {'E4','E6','E8','E10'};
				values = {'5_4','5_6','5_8','5_10'};
			elseif tamanho == 6 then
				-- I
				items = {'I4','I6','I8'};
				values = {'6_4','6_6','6_8'};
			elseif tamanho == 7 then
				-- C
				items = {'C4','C6','C8'};
				values = {'7_4','7_6','7_8'};
			end;

			self.propulsor.items = items;
			self.propulsor.values = values;

			self.propulsor.text = current;

			-- FTL drive

			local drive = tonumber(sheet.deriva) or 0;
			items = {'-','Básico','Intenso','Maior','Superior','Ultra','KF'};
			values = {};
			current = items[drive+1];

			if tamanho >= 1 and tamanho &lt;=3 then
				-- Mn, P, M
				items = {'-','Básico','Intenso','Maior','Superior','Ultra'};
				values = {'0','1','2','3','4','5'};
			elseif tamanho == 4 then
				-- G
				items = {'-','Básico','Intenso','Maior','Superior'};
				values = {'0','1','2','3','4'};
			elseif tamanho == 5 then
				-- E
				items = {'-','Básico','Intenso','KF'};
				values = {'0','1','2','6'};
			elseif tamanho >= 6 then
				-- I, C
				items = {'-','Básico','KF'};
				values = {'0','1','6'};
			end;

			self.deriva.items = items;
			self.deriva.values = values;

			self.deriva.text = current;

			-- Plataforma

			local plataforma = tonumber(sheet.deriva) or 0;
			items = {'Generica', 'Corredora', 'Interceptadora', 'Caça', 'Ônibus', 'Cargueira Leve', 'Exploradora', 'Transporte', 'Contratorpedeira', 'Cargueira Pesada', 'Cargueira Massiva', 'Cruzadora', 'Transportadora', 'Nave de Batalha', 'Couraçada'};
			values = {'0','1','2','3','4','5','6','7','8','9','10','11','12','13','14'};
			current = items[plataforma+1];

			if tamanho == 1 then
				-- Mn
				items = {'Generica', 'Corredora', 'Interceptadora', 'Caça'};
				values = {'0','1','2','3'};
			elseif tamanho == 2 then
				-- P
				items = {'Generica', 'Ônibus', 'Cargueira Leve'};
				values = {'0','4','5'};
			elseif tamanho == 3 then
				-- M
				items = {'Generica','Exploradora', 'Transporte'};
				values = {'0','6','7'};
			elseif tamanho == 4 then
				-- G
				items = {'Generica', 'Contratorpedeira', 'Cargueira Pesada'};
				values = {'0','8','9'};
			elseif tamanho == 5 then
				-- E
				items = {'Generica', 'Cargueira Massiva', 'Cruzadora'};
				values = {'0','10','11'};
			elseif tamanho == 6 then
				-- I
				items = {'Generica', 'Transportadora', 'Nave de Batalha'};
				values = {'0','12','13'};
			elseif tamanho == 7 then
				-- C
				items = {'Generica','Couraçada'};
				values = {'0','14'};
			end;

			self.plataforma.items = items;
			self.plataforma.values = values;

			self.plataforma.text = current;
		</event>
	</dataLink>
	<dataLink fields="{'tamanho','plataforma', 'armadura_curva'}">
		<event name="onChange">
			if sheet==nil then return end;

			local tamanho = tonumber(sheet.tamanho) or 1;
			local plataforma = tonumber(sheet.plataforma) or 0;
			local armadura_curva = tonumber(sheet.armadura_curva) or 0;

			if plataforma == 0 then
				local manobra = {"Perfeita (Curva ", "Boa (Curva ", "Mediana (Curva ", "Mediana (Curva ", "Ruim (Curva ", "Ruim (Curva ", "Desajeitada (Curva "};
				local curva = {0,1,2,2,3,3,4};
				local pilotagem = {2,1,0,0,-1,-1,-2};
				local pc = {30,40,70,150,180,280,400};
				local incremento = {5,10,15,20,25,40,50};
				local ld = {0,0,0,0,5,10,15};

				sheet.manobra = manobra[tamanho] .. (curva[tamanho]+armadura_curva) .. ")";
				sheet.plataforma_pilotagem = pilotagem[tamanho];
				sheet.casco_base = pc[tamanho];
				sheet.casco_incremento = incremento[tamanho];
				sheet.casco_ld = ld[tamanho];
				sheet.expansaoMax = 0;
				sheet.plataforma_tripMin = 1;
				sheet.plataforma_tripMax = 1;
				sheet.plataforma_pf = 0;
			else
				local manobra = {"Perfeita (Curva ", "Perfeita (Curva ", "Boa (Curva ", "Perfeita (Curva ", "Boa (Curva ", "Boa (Curva ", "Mediana (Curva ", "Mediana (Curva ", "Mediana (Curva ", "Ruim (Curva ", "Mediana (Curva ", "Ruim (Curva ", "Mediana (Curva ", "Desajeitada (Curva "};
				local curva = {0,0,1,0,1,1,2,2,2,3,2,3,2,4}
				local pilotagem = {2, 2, 1, 2, 1, 1, 0, 0, 0, -1, 0, -1, 0, -2};
				local pc = {20,30,35,35,40,55,70,150,120,160,180,240,280,400};
				local incremento = {5,5,5,5,10,10,15,20,20,20,25,30,40,50};
				local ld = {0,0,0,0,0,0,0,0,0,5,5,10,10,15};
				local expansao = {0,0,0,3,6,4,5,4,8,10,6,10,8,20};
				local tripMin = {1,1,1,1,1,1,1,6,6,20,20,75,100,125};
				local tripMax = {1,1,2,4,6,6,6,20,20,50,100,200,300,500};
				local pf = {4,6,8,6,10,12,15,30,40,55,60,120,150,200};

				sheet.manobra = manobra[plataforma] .. (curva[tamanho]+armadura_curva) .. ")";
				sheet.plataforma_pilotagem = pilotagem[plataforma];
				sheet.casco_base = pc[plataforma];
				sheet.casco_incremento = incremento[plataforma];
				sheet.casco_ld = ld[plataforma];
				sheet.expansaoMax = expansao[plataforma];
				sheet.plataforma_tripMin = tripMin[plataforma];
				sheet.plataforma_tripMax = tripMax[plataforma];
				sheet.plataforma_pf = pf[plataforma];

			end;
		</event>
	</dataLink>
	<dataLink fields="{'propulsor'}">
		<event name="onChange">
			if sheet==nil then return end;
			local propulsor = sheet.propulsor or "";

			local velocidade = {n1_6="6",n1_8="8",n1_10="10",n1_12="12",n1_14="14",n2_6="6",n2_8="8",n2_10="10",n2_12="12",n3_4="4",n3_6="6",n3_8="8",n3_10="10",n3_12="12",n4_4="4",n4_6="6",n4_8="8",n4_10="10",n5_4="4",n5_6="6",n5_8="8",n5_10="10",n6_4="4",n6_6="6",n6_8="8",n7_4="4",n7_6="6",n7_8="8"};
			local pilotagem = {n1_6="1",n1_8="0",n1_10="0",n1_12="-1",n1_14="-2",n2_6="1",n2_8="0",n2_10="0",n2_12="-1",n3_4="2",n3_6="1",n3_8="0",n3_10="0",n3_12="-1",n4_4="2",n4_6="1",n4_8="0",n4_10="0",n5_4="2",n5_6="1",n5_8="0",n5_10="0",n6_4="2",n6_6="1",n6_8="0",n7_4="2",n7_6="1",n7_8="0"};
			local une = {n1_6="20",n1_8="25",n1_10="30",n1_12="35",n1_14="40",n2_6="30",n2_8="40",n2_10="50",n2_12="60",n3_4="40",n3_6="50",n3_8="60",n3_10="70",n3_12="80",n4_4="60",n4_6="80",n4_8="100",n4_10="120",n5_4="80",n5_6="120",n5_8="140",n5_10="160",n6_4="120",n6_6="180",n6_8="240",n7_4="200",n7_6="300",n7_8="400"};
			local pf = {n1_6="3",n1_8="4",n1_10="5",n1_12="6",n1_14="7",n2_6="3",n2_8="4",n2_10="5",n2_12="6",n3_4="2",n3_6="3",n3_8="4",n3_10="5",n3_12="6",n4_4="4",n4_6="6",n4_8="8",n4_10="10",n5_4="4",n5_6="6",n5_8="8",n5_10="10",n6_4="8",n6_6="12",n6_8="16",n7_4="8",n7_6="12",n7_8="16"};
			local blocos = {n1_6="4",n1_8="8",n1_10="12",n1_12="16",n1_14="20",n2_6="54",n2_8="108",n2_10="162",n2_12="216",n3_4="540",n3_6="1080",n3_8="1620",n3_10="2160",n3_12="2700",n4_4="10240",n4_6="20480",n4_8="30720",n4_10="40960",n5_4="160000",n5_6="320000",n5_8="480000",n5_10="640000",n6_4="6750000",n6_6="13500000",n6_8="20250000",n7_4="540000000",n7_6="1080000000",n7_8="1620000000"};
			local tripMin = {n1_6="0",n1_8="0",n1_10="0",n1_12="0",n1_14="0",n2_6="0",n2_8="0",n2_10="0",n2_12="0",n3_4="1",n3_6="2",n3_8="3",n3_10="4",n3_12="5",n4_4="3",n4_6="6",n4_8="9",n4_10="12",n5_4="40",n5_6="60",n5_8="80",n5_10="100",n6_4="75",n6_6="125",n6_8="175",n7_4="100",n7_6="150",n7_8="200"};
			local tripMax = {n1_6="0",n1_8="0",n1_10="0",n1_12="0",n1_14="0",n2_6="1",n2_8="1",n2_10="1",n2_12="1",n3_4="5",n3_6="10",n3_8="15",n3_10="20",n3_12="25",n4_4="15",n4_6="30",n4_8="45",n4_10="60",n5_4="200",n5_6="300",n5_8="400",n5_10="500",n6_4="375",n6_6="625",n6_8="875",n7_4="500",n7_6="750",n7_8="1000"};

			sheet.velocidade = velocidade["n"..propulsor];
			sheet.propulsor_pilotagem = pilotagem["n"..propulsor];
			sheet.propulsor_une = une["n"..propulsor];
			sheet.propulsor_pf = pf["n"..propulsor];
			sheet.propulsor_blocos = blocos["n"..propulsor];
			sheet.propulsor_tripMin = tripMin["n"..propulsor];
			sheet.propulsor_tripMax = tripMax["n"..propulsor];
		</event>
	</dataLink>
	<dataLink fields="{'armadura','tamanho'}">
		<event name="onChange">
			if sheet==nil then return end;
			local armadura = tonumber(sheet.armadura) or 0;
			local tamanho = tonumber(sheet.tamanho) or 1;

			local tm = {0,0,0,0,0,-1,-1,-1,-1,-2,-2,-2,-3,-3,-3,-4};
			local curva = {0,0,0,0,0,0,0,0,0,1,1,1,2,2,2,3};
			local pf = {0,1,2,3,5,7,9,12,15,18,21,25,30,35,40,45};
			local blocos = {{0,1,2,3,5,7,9,12,15,18,21,25,30,35,40,45},{0,8,16,24,40,56,72,96,120,144,168,200,240,280,320,360},{0,27,54,81,135,189,243,324,405,486,567,675,810,945,1080,1215},{0,64,128,192,320,448,576,768,960,1152,1344,1600,1920,2240,2560,2880},{0,125,250,375,625,875,1125,1500,1875,2250,2625,3125,3750,4375,5000,5625},{0,216,432,648,1080,1512,1944,2592,3240,3888,4536,5400,6480,7560,8640,9720},{0,343,686,1029,1715,2401,3087,4116,5145,6174,7203,8575,10290,12005,13720,15435}}

			sheet.ca_armadura = armadura;

			sheet.tm_armadura = tm[armadura+1];
			sheet.armadura_curva = curva[armadura+1];
			sheet.armadura_pf = pf[armadura+1] * tamanho;
			sheet.armadura_blocos = blocos[tamanho][armadura+1];
		</event>
	</dataLink>
	<dataLink fields="{'computador','tamanho'}">
		<event name="onChange">
			if sheet==nil then return end;
			local computador = sheet.computador or "0_0";
			local tamanho = tonumber(sheet.tamanho) or 1;

			local nodulos = {n0_0="0",n1_1="1",n2_1="2",n3_1="3",n4_1="4",n1_2="1",n2_2="2",n3_2="3",n4_2="4",n1_3="1",n2_3="2",n3_3="3",n4_3="4",n1_4="1",n2_4="2",n3_4="3",n1_5="1",n2_5="2",n3_5="3",n1_6="1",n2_6="2",n1_7="1",n2_7="2",n1_8="1",n2_8="2",n1_9="1",n2_9="2",n1_10="1",n2_10="2"};
			local bonus = {n0_0="0",n1_1="1",n2_1="1",n3_1="1",n4_1="1",n1_2="2",n2_2="2",n3_2="2",n4_2="2",n1_3="3",n2_3="3",n3_3="3",n4_3="3",n1_4="4",n2_4="4",n3_4="4",n1_5="5",n2_5="5",n3_5="5",n1_6="6",n2_6="6",n1_7="7",n2_7="7",n1_8="8",n2_8="8",n1_9="9",n2_9="9",n1_10="10",n2_10="10"};

			local nodulo = (tonumber(nodulos["n"..computador]) or 0);
			local mod = (tonumber(bonus["n"..computador]) or 0)
			local une = 0;
			if mod > 0 then 
				une = (mod+1)*5;
			end;

			sheet.computador_nodulos = nodulo;
			sheet.computador_bonus = mod;
			sheet.computador_une = une;
			sheet.computador_pf = nodulo*mod*mod;
			sheet.computador_blocos = tamanho*tamanho*tamanho*nodulo;
		</event>
	</dataLink>
	<dataLink fields="{'contramedidas','tamanho','tm_armadura'}">
		<event name="onChange">
			if sheet==nil then return end;
			local contramedidas = tonumber(sheet.contramedidas) or 0;
			local tamanho = tonumber(sheet.tamanho) or 1;
			local tm_armadura = tonumber(sheet.tm_armadura) or 0;

			local une = {0,1,1,2,3,4,5,7,9,11,13,16,20,25,32,45};
			local pf = {0,2,3,4,6,8,11,14,18,22,27,33,40,50,65,90};
			local blocos = {{0,1,2,3,5,7,9,12,15,18,21,25,30,35,40,45},{0,8,16,24,40,56,72,96,120,144,168,200,240,280,320,360},{0,27,54,81,135,189,243,324,405,486,567,675,810,945,1080,1215},{0,64,128,192,320,448,576,768,960,1152,1344,1600,1920,2240,2560,2880},{0,125,250,375,625,875,1125,1500,1875,2250,2625,3125,3750,4375,5000,5625},{0,216,432,648,1080,1512,1944,2592,3240,3888,4536,5400,6480,7560,8640,9720},{0,343,686,1029,1715,2401,3087,4116,5145,6174,7203,8575,10290,12005,13720,15435}}

			sheet.tm_contramedidas = contramedidas + tm_armadura;

			sheet.contramedidas_une = une[contramedidas+1];
			sheet.contramedidas_pf = pf[contramedidas+1];
			sheet.contramedidas_blocos = blocos[tamanho][contramedidas+1];
		</event>
	</dataLink>
	<dataLink fields="{'escudo','escudo_proa','escudo_popa','escudo_bombordo','escudo_estibordo','tamanho'}">
		<event name="onChange">
			if sheet==nil then return end;
			local escudo_total = (tonumber(sheet.escudo_proa) or 0) + 
								 (tonumber(sheet.escudo_popa) or 0) + 
								 (tonumber(sheet.escudo_bombordo) or 0) + 
								 (tonumber(sheet.escudo_estibordo) or 0);
			local escudo = tonumber(sheet.escudo) or 0;
			local tamanho = tonumber(sheet.tamanho) or 1;

			local pe = {0,10,20,30,40,50,60,70,80,90,100,120,140,160,200,240,280,320,360,420,480,540,600};
			local regen = {0,1,1,1,1,1,2,2,2,4,4,4,8,8,8,16,16,16,32,32,32,64,64};
			local une = {0,5,10,15,15,20,20,25,30,30,30,35,40,45,50,55,60,70,80,90,110,130,160};
			local pf = {0,2,3,4,5,6,8,10,12,13,15,17,18,20,22,23,25,27,28,30,32,35,40};
			local blocos = {{0,2,3,4,5,6,8,10,12,13,15,17,18,20,22,23,25,27,28,30,32,35,40},{0,16,24,32,40,48,64,80,96,104,120,136,144,160,176,184,200,216,224,240,256,280,320},{0,54,81,108,135,162,216,270,324,351,405,459,486,540,594,621,675,729,756,810,864,945,1080},{0,128,192,256,320,384,512,640,768,832,960,1088,1152,1280,1408,1472,1600,1728,1792,1920,2048,2240,2560},{0,250,375,500,625,750,1000,1250,1500,1625,1875,2125,2250,2500,2750,2875,3125,3375,3500,3750,4000,4375,5000},{0,432,648,864,1080,1296,1728,2160,2592,2808,3240,3672,3888,4320,4752,4968,5400,5832,6048,6480,6912,7560,8640},{0,686,1029,1372,1715,2058,2744,3430,4116,4459,5145,5831,6174,6860,7546,7889,8575,9261,9604,10290,10976,12005,13720}};
			local tripMin = {0,1,4,16,32,64,128};
			local tripMax = {1,4,8,32,64,128,256};

			if escudo == 0 then
				sheet.escudo_total = escudo_total .. " (0)";
				sheet.escudo_une = 0;
				sheet.escudo_pf = 0;
				sheet.escudo_blocos = 0;
				sheet.escudo_tripMin = 0;
				sheet.escudo_tripMax = 0;
			else
				sheet.escudo_total = escudo_total .. " (" .. regen[escudo+1] .. ")";
				sheet.escudo_une = une[escudo+1];
				sheet.escudo_pf = pf[escudo+1];
				sheet.escudo_blocos = blocos[tamanho][escudo+1];
				sheet.escudo_tripMin = tripMin[tamanho];
				sheet.escudo_tripMax = tripMax[tamanho];
			end;
		</event>
	</dataLink>
	<dataLink fields="{'deriva','tamanho'}">
		<event name="onChange">
			if sheet==nil then return end;
			local deriva = tonumber(sheet.deriva) or 0;
			local tamanho = tonumber(sheet.tamanho) or 1;

			local une = {75,100,150,175,200};
			local pf = {2,5,10,15,20}

			if deriva == 0 then
				sheet.deriva_class = 0;
				sheet.deriva_une = 0;
				sheet.deriva_pf = 0;
				sheet.deriva_blocos = 0;
				sheet.deriva_tripMin = 0;
				sheet.deriva_tripMax = 0;
			elseif deriva &lt; 6 then
				sheet.deriva_class = deriva;
				sheet.deriva_une = une[deriva];
				sheet.deriva_pf = (tonumber(pf[deriva]) or 0) * tamanho;
				sheet.deriva_blocos = 0;
				sheet.deriva_tripMin = 0;
				sheet.deriva_tripMax = 0;
			else
				local blocos = {0,0,0,0,100000,10000000,100000000};
				local tripMin = {0,0,0,0,50,120,250};
				local tripMax = {0,0,0,0,250,600,1250};
				sheet.deriva_class = "30 a.l.";
				sheet.deriva_une = 0;
				sheet.deriva_pf = 20 * tamanho;
				sheet.deriva_blocos = blocos[tamanho];
				sheet.deriva_tripMin = tripMin[tamanho];
				sheet.deriva_tripMax = tripMax[tamanho];
			end;
		</event>
	</dataLink>
	<dataLink fields="{'sensor'}">
		<event name="onChange">
			if sheet==nil then return end;
			local sensor = tonumber(sheet.sensor) or 0;

			local mod = {0,2,4,0,2,4,0,2,4};
			local pf = {2,3,4,3,5,8,6,10,14}

			if sensor == 0 then
				sheet.sensor_mod = -2;
				sheet.sensor_pf = 1;
			else
				sheet.sensor_mod = mod[sensor];
				sheet.sensor_pf = pf[sensor];
			end;

			self.sensor.hint = (self.sensor.text or "") .. ", modificador: " .. (sheet.sensor_mod or "");
		</event>
	</dataLink>
	<dataLink fields="{'opt_pc','casco_base','casco_incremento','armadura','ranque'}">
		<event name="onChange">
			if sheet==nil then return end;
			local base = tonumber(sheet.casco_base) or 0;
			local incremento = tonumber(sheet.casco_incremento) or 0;
			local armadura = tonumber(sheet.armadura) or 0;
			local ranque = tonumber(sheet.ranque) or 0;

			local casco = base + math.floor(ranque/4) * incremento;
			if sheet.opt_pc then
				casco = math.floor(casco * (armadura+10)*10/100);
			end;

			sheet.casco = casco;
			sheet.casco_lc = math.floor(casco/5);
		</event>
	</dataLink>
	<dataLink fields="{'ca_piloto','ca_armadura','ca_tamanho','ca_outros','tm_contramedidas','tm_outros'}">
		<event name="onChange">
			if sheet==nil then return end;
			local piloto = tonumber(sheet.ca_piloto) or 0;
			local armadura = tonumber(sheet.ca_armadura) or 0;
			local tamanho = tonumber(sheet.ca_tamanho) or 0;
			local outros = tonumber(sheet.ca_outros) or 0;
			local contramedidas = tonumber(sheet.tm_contramedidas) or 0;
			local extra = tonumber(sheet.tm_outros) or 0;

			sheet.ca = 10 + piloto + armadura + tamanho + outros;
			sheet.tm = 10 + piloto + contramedidas + tamanho + extra;
		</event>
	</dataLink>
	<dataLink fields="{'ranque'}">
		<event name="onChange">
			if sheet==nil then return end;
			local ranque = tonumber(sheet.ranque) or 0;

			if ranque &lt; 0.26 then
				sheet.fabricacaoMax = 25;
			elseif ranque &lt; 0.35 then
				sheet.fabricacaoMax = 30;
			elseif ranque &lt; 0.51 then
				sheet.fabricacaoMax = 40;
			elseif ranque > 20 then
				sheet.fabricacaoMax = 1000 + (ranque-20) * 100;
			else
				local pf = {55,75,95,115,135,155,180,205,230,270,310,350,400,450,500,600,700,800,900,1000};
				sheet.fabricacaoMax = pf[ranque];
			end;
		</event>
	</dataLink>
	<dataLink fields="{'plataforma_pf','propulsor_pf','armadura_pf','computador_pf','contramedidas_pf','escudo_pf','deriva_pf','sensor_pf','expansao_pf','reator_pf','sec_hack','sec_choque','sec_tranca','sec_autodest','sec_alarm','sec_lockout','sec_shell','sec_wipe','sec_feedback','sec_firewall','ranque','tamanho','weapon_pf'}">
		<event name="onChange">
			if sheet==nil then return end;
			local pc = math.max( math.floor((tonumber(sheet.ranque) or 1)/2), 1);
			local tamanho = (tonumber(sheet.tamanho) or 1);
			local fabricacaoMin =   (tonumber(sheet.plataforma_pf) or 0) +
									(tonumber(sheet.propulsor_pf) or 0) +
									(tonumber(sheet.armadura_pf) or 0) +
									(tonumber(sheet.computador_pf) or 0) +
									(tonumber(sheet.contramedidas_pf) or 0) +
									(tonumber(sheet.escudo_pf) or 0) +
									(tonumber(sheet.deriva_pf) or 0) +
									(tonumber(sheet.sensor_pf) or 0) +
									(tonumber(sheet.reator_pf) or 0) +
									(tonumber(sheet.weapon_pf) or 0) +
									(tonumber(sheet.expansao_pf) or 0) +
									(tonumber(sheet.sec_hack) or 0)*3 + 
									(tonumber(sheet.sec_choque) or 0)*pc;

			if sheet.sec_tranca then
				fabricacaoMin = fabricacaoMin + 5;
			end;
			if sheet.sec_autodest then
				fabricacaoMin = fabricacaoMin + 5*tamanho;
			end;
			if sheet.sec_alarm then
				fabricacaoMin = fabricacaoMin + pc;
			end;
			if sheet.sec_lockout then
				fabricacaoMin = fabricacaoMin + pc;
			end;
			if sheet.sec_shell then
				fabricacaoMin = fabricacaoMin + pc;
			end;
			if sheet.sec_wipe then
				fabricacaoMin = fabricacaoMin + pc;
			end;
			if sheet.sec_feedback then
				fabricacaoMin = fabricacaoMin + pc;
			end;
			if sheet.sec_firewall then
				fabricacaoMin = fabricacaoMin + pc;
			end;

			sheet.fabricacaoMin = fabricacaoMin;
		</event>
	</dataLink>
	<dataLink fields="{'propulsor_une','computador_une','contramedidas_une','escudo_une','deriva_une','expansao_une','weapon_une'}">
		<event name="onChange">
			if sheet==nil then return end;
			sheet.energiaMin =   (tonumber(sheet.propulsor_une) or 0) +
									(tonumber(sheet.computador_une) or 0) +
									(tonumber(sheet.contramedidas_une) or 0) +
									(tonumber(sheet.escudo_une) or 0) +
									(tonumber(sheet.deriva_une) or 0) +
									(tonumber(sheet.weapon_une) or 0) +
									(tonumber(sheet.expansao_une) or 0);
		</event>
	</dataLink>
	<dataLink fields="{'dimensoes_a','dimensoes_b','dimensoes_c'}">
		<event name="onChange">
			if sheet==nil then return end;
			sheet.blocosMax =   (tonumber(sheet.dimensoes_a) or 0) *
									(tonumber(sheet.dimensoes_b) or 0) *
									(tonumber(sheet.dimensoes_c) or 0);
		</event>
	</dataLink>
	<dataLink fields="{'propulsor_blocos','armadura_blocos','computador_blocos','contramedidas_blocos','escudo_blocos','deriva_blocos','reator_blocos','expansao_blocos','weapon_blocos'}">
		<event name="onChange">
			if sheet==nil then return end;
			local blocosMin =  (tonumber(sheet.propulsor_blocos) or 0) +
								(tonumber(sheet.armadura_blocos) or 0) +
								(tonumber(sheet.computador_blocos) or 0) +
								(tonumber(sheet.contramedidas_blocos) or 0) +
								(tonumber(sheet.escudo_blocos) or 0) +
								(tonumber(sheet.deriva_blocos) or 0) +
								(tonumber(sheet.reator_blocos) or 0) +
								(tonumber(sheet.weapon_blocos) or 0) +
								(tonumber(sheet.expansao_blocos) or 0);

			-- showMessage(blocosMin .. " (" .. (blocosMin*2) .. ")";);
			-- blocosMin .. " (" .. (blocosMin*2) .. ")";
			sheet.blocosMin = blocosMin*2;
		</event>
	</dataLink>
	<dataLink fields="{'blocosMin','ranque','precoCheck','pesoCheck'}">
		<event name="onChange">
			if sheet==nil then return end;
			local blocos = (tonumber(sheet.blocosMin) or 0);
			local ranque = (tonumber(sheet.ranque) or 0);

			if sheet.precoCheck then
				sheet.preco = blocos*ranque*250;
			end;
			if sheet.pesoCheck then
				sheet.peso = (blocos/5);
			end;
		</event>
	</dataLink>
	<dataLink fields="{'plataforma_tripMin','opt_trip','propulsor_tripMin','escudo_tripMin','deriva_tripMin','reator_tripMin','expansao_tripMin','weapon_tripMin'}">
		<event name="onChange">
			if sheet==nil then return end;
			local capitao = (tonumber(sheet.plataforma_tripMin) or 0);
			local tripMin = capitao;

			if sheet.opt_trip then
				local propulsor = (tonumber(sheet.propulsor_tripMin) or 0);
				local escudo = (tonumber(sheet.escudo_tripMin) or 0);
				local deriva = (tonumber(sheet.deriva_tripMin) or 0);
				local reator = (tonumber(sheet.reator_tripMin) or 0);
				local weapon = (tonumber(sheet.weapon_tripMin) or 0);
				local expansao = (tonumber(sheet.expansao_tripMin) or 0);
				local pilotos = math.floor(propulsor/10);

				local expansoes = {0,0,0,0,0,0,0};

	            local nodes = NDB.getChildNodes(sheet.listaExpansao); 
	            for i=1, #nodes, 1 do
	                local trip = (tonumber(nodes[i].tripMin) or 0);
	                local tipo = (tonumber(nodes[i].tripTipo) or 0);

	                if tipo >=1 and tipo &lt;= 7 then
	                	expansoes[tipo] = expansoes[tipo] + trip;
	                end;
	            end;

				tripMin = tripMin + propulsor + escudo + deriva + reator + weapon + expansao;
				sheet.trip_min1 = capitao + expansoes[1];
				sheet.trip_min2 = weapon + expansoes[2];
				sheet.trip_min3 = (propulsor - pilotos) + deriva + reator + expansoes[3];
				sheet.trip_min4 = escudo + expansoes[4];
				sheet.trip_min5 = pilotos + expansoes[5];
				sheet.trip_min6 = expansoes[6];
				sheet.trip_min7 = expansoes[7];

			end;

			sheet.tripulacaoMin = tripMin;
		</event>
	</dataLink>
	<dataLink fields="{'plataforma_tripMax','opt_trip','propulsor_tripMax','escudo_tripMax','deriva_tripMax','reator_tripMax','expansao_tripMax','weapon_tripMax'}">
		<event name="onChange">
			if sheet==nil then return end;
			local capitao = (tonumber(sheet.plataforma_tripMax) or 0);
			local tripMax = capitao;

			if sheet.opt_trip then
				local propulsor = (tonumber(sheet.propulsor_tripMax) or 0);
				local escudo = (tonumber(sheet.escudo_tripMax) or 0);
				local deriva = (tonumber(sheet.deriva_tripMax) or 0);
				local reator = (tonumber(sheet.reator_tripMax) or 0);
				local weapon = (tonumber(sheet.weapon_tripMax) or 0);
				local expansao = (tonumber(sheet.expansao_tripMax) or 0);
				local pilotos = math.floor(propulsor/10);

				local expansoes = {0,0,0,0,0,0,0};

	            local nodes = NDB.getChildNodes(sheet.listaExpansao); 
	            for i=1, #nodes, 1 do
	                local trip = (tonumber(nodes[i].tripMax) or 0);
	                local tipo = (tonumber(nodes[i].tripTipo) or 0);

	                if tipo >=1 and tipo &lt;= 7 then
	                	expansoes[tipo] = expansoes[tipo] + trip;
	                end;
	            end;

				tripMax = tripMax + propulsor + escudo + deriva + reator + weapon + expansao;
				sheet.trip_max1 = capitao + expansoes[1];
				sheet.trip_max2 = weapon + expansoes[2];
				sheet.trip_max3 = propulsor - pilotos + deriva + reator + expansoes[3];
				sheet.trip_max4 = escudo + expansoes[4];
				sheet.trip_max5 = pilotos + expansoes[5];
				sheet.trip_max6 = expansoes[6];
				sheet.trip_max7 = expansoes[7];
			end;

			sheet.tripulacaoMax = tripMax;
		</event>
	</dataLink>
	<dataLink fields="{'status_vida','status_sensores','status_motores','status_reator','status_proa','status_popa','status_bombordo','status_estibordo'}">
		<event name="onChange">
			if sheet==nil then return end;
			sheet.danos =   (tonumber(sheet.status_vida) or 0) +
							(tonumber(sheet.status_sensores) or 0) +
							(tonumber(sheet.status_motores) or 0) +
							(tonumber(sheet.status_reator) or 0) +
							(tonumber(sheet.status_proa) or 0) +
							(tonumber(sheet.status_popa) or 0) +
							(tonumber(sheet.status_bombordo) or 0) +
							(tonumber(sheet.status_estibordo) or 0);
		</event>
	</dataLink>
</form>