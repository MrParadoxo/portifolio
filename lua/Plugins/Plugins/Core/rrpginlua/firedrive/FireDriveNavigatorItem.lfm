<?xml version="1.0" encoding="UTF-8"?>
<form name="frmFireDriveNavigatorItem" width="90" height="90" margins="{left=2, right=2, top=2, bottom=2}" padding="{left=2, right=2, top=2, bottom=2}" hitTest="true" canFocus="true">
	<script><![CDATA[
		local _imageURL = nil;
	
		local function verificarTipoDoItem()
			if sheet ~= nil then
				local url = nil;
				local extension;
				local useAbsoluteURL = false;
				_imageURL = nil;
			
				if sheet.isDir or sheet.kind == "dir" then
					url = "folder.png";
				else
					local mime = string.lower(sheet.mimeType or "");	
					
					if mime:match("^image/.*$") then
						_imageURL = sheet.url;
					end;
				
					if sheet.urlThumb64 ~= nil then
						url = sheet.urlThumb64;
						useAbsoluteURL = true;
					else
						local name = sheet.name or "";
						
						extension = string.lower(name:match("(%.[^%.\\/]*)$"));
						
						if mime:match("^text/.*$") then
							url = "textFile.png";
						elseif mime:match("^audio/.*$") then
							url = "soundFile.png";
						elseif mime == "application/pdf" then
							url = "pdfFile.png";
						elseif extension == ".txt" then
							url = "textFile.png";
						elseif extension == ".pdf" then
							url = "pdfFile.png";
						elseif extension == ".mp3" or extension == ".wav" then
							url = "soundFile.png";
						end;
					end;
				end;
				
				url = url or "otherFile.png";
				
				if (url ~= nil) and (not useAbsoluteURL) then
					url = "/firedrive/icos/" .. url;
				end;
				
				self.imgIco.src = url or "";
			end;
		end; 
		
		local function abrir()
			if self._navigator ~= nil then
				self._navigator:open(sheet);
			end;
		end;
		
		local function retornarUmNivel()
			if self._navigator ~= nil then
				self._navigator:returnOneLevel();
			end;
		end;
		
		local function exibirMenu()
			if self._navigator ~= nil and sheet ~= nil then
				self._navigator:exibirMenuParaItem(sheet, self);
			end;
		end;
		
		local function checkSelfSize()
			local p = self.padding;
			local h = self.imgIco.height + self.labNome.height + p.top + p.bottom;
			self.height = h;
		end;
		
		
		local function criarUploadStatusComp()
			local ret = GUI.newRectangle();
			ret.xradius = 10;
			ret.yradius = 10;
			ret.color = "#000000C0";
			ret.align = "client";
			ret.parent = self.imgIco;
			ret.hitTest = false;
			ret.canFocus = false;
			
			local aniInd = GUI.newActivityIndicator();
			aniInd.align = "client";
			aniInd.visible = true;
			aniInd.enabled = true;
			aniInd.parent = ret;
			aniInd.hitTest = false;
			aniInd.canFocus = false;
			aniInd.margins = {left=10, right=10, bottom=10, top=10};
			
			local labPercent = GUI.newLabel();
			labPercent.align = "top";
			labPercent.horzTextAlign = "center";
			labPercent.wordWrap = false;
			labPercent.autoSize = true;	
			
			local barra = GUI.newProgressBar();
			barra.visible = true;
			barra.hitTest = false;
			barra.height = 20;
			barra.color = "Green";
			
			local imgState = nil;
			
			local function criarImgState()
				imgState = GUI.newImage();
				imgState.margins = {left=10, right=10, bottom=10, top=10};
				imgState.align = "client";
				imgState.hitTest = false;
			end;
			
			local recalcPosBarraEPercent = function()
				local margens = 2;
				local barraH = barra.height;
				local imgIcoW = self.imgIco.width;
				local totalH = labPercent.height + barraH + margens;
				local barraW = imgIcoW * 0.8;
				
				local y = self.imgIco.height / 2 - totalH / 2;
				barra.top = y;
				barra.width = barraW;
				barra.left = imgIcoW / 2 - barraW / 2;
				
				labPercent.top = y + barraH + margens;
				labPercent.left = imgIcoW / 2 - labPercent.width / 2;
			end;
			
			ret.onResize = recalcPosBarraEPercent;
			labPercent.onResize = recalcPosBarraEPercent;
			
			local _oldCurrent = 0;
			local _oldMaxBytes = 0;
			
			local configuradoPara = "ani"; -- "ani", "barra" ou "error"
			
			function ret:setProgress(current, maxBytes, errorMsg)								
				maxBytes = maxBytes or 0;
				current = current or 0;			
							
				if errorMsg ~= nil then
					if configuradoPara ~= "error" then
						configuradoPara = "error";
						
						if imgState == nil then
							criarImgState();
						end;
						
						aniInd.enabled = false;
						aniInd.parent = nil;	
						labPercent.parent = nil;
						barra.parent = nil;
						
						imgState.src = "/firedrive/icos/error64.png";
						imgState.parent = ret;
					end;
				elseif current < maxBytes then						
					if configuradoPara ~= "barra" then
						configuradoPara = "barra";						
						aniInd.enabled = false;
						aniInd.parent = nil;						
												
						if imgState ~= nil then
							imgState.parent = nil;
						end;
												
						barra.parent = ret;
						labPercent.parent = ret;
						recalcPosBarraEPercent();
					end;					
										
					if _oldMaxBytes ~= maxBytes then
						barra.max = maxBytes;
						_oldMaxBytes = maxBytes;
					end;
					
					if _oldCurrent ~= current then
						barra.position = current;
						_oldCurrent = current;
					end;
					
					if maxBytes > 0 then
						labPercent.text = string.format("%0.0f%%", (current / maxBytes) * 100);
					end;
				else
					-- usar um indicador de atividade
					
					if configuradoPara ~= "ani" then
						configuradoPara = "ani";
						aniInd.enabled = true;
						aniInd.parent = ret;	
						
						if imgState ~= nil then
							imgState.parent = nil;
						end;

						labPercent.parent = nil;
						barra.parent = nil;
					end;
				end;
			end;
			
			return ret;
		end;
			
		]]>
	</script>

	<image name="imgIco" align="top" optimize="true"/>
	<script>local p = self.padding; self.imgIco.height = self.width - p.left - p.right - 20;</script>	
	<label name="labNome" align="top" field="name" vertTextAlign="leading" horzTextAlign="center" 
		   wordWrap="true" autoSize="true" onResize="checkSelfSize();" textTrimming="none"/>	
		
	<event name="onScopeNodeChanged">verificarTipoDoItem();</event>
	<event name="onDblClick">abrir();</event>
	<event name="onMenu">exibirMenu();</event>
	
	<dataLink field="urlThumb64" onChange="verificarTipoDoItem();"/>
	
	<dataLink fields="{'uploading', 'uploadSent', 'uploadMax', 'errorMsg'}">
		<event name="onChange">
			local status = self._uploadStatus;
		
			if sheet.uploading then		
				if status == nil then
					status = criarUploadStatusComp();
					self._uploadStatus = status;
				end;
				
				if status.parent == nil then
					status.parent = self.imgIco;
				end;
				
				status:setProgress(sheet.uploadSent or 0, sheet.uploadMax or 0, sheet.errorMsg);
			else
				if status ~= nil then
					--self._uploadStatus = nil;
					status.parent = nil;
					--status:destroy();
				end;
			end;
		</event>
	</dataLink>
	
	<event name="onKeyDown">
		if event.keyCode == 13 or event.key == "\13" then
			-- ENTER
			event.key = 0;
			event.keyCode = 0;
			abrir();
		elseif event.keyCode == 8 then
			-- BackSpace	
			event.key = 0;
			event.keyCode = 0;
			retornarUmNivel();
		elseif event.keyCode == 27 then			
			event.key = "";
			event.keyCode = 0;
			
			if self._navigator ~= nil then
				self._navigator:notifyRequestCancel();
			end;			
		end;
	</event>
	
	<event name="onStartDrag">
		if _imageURL ~= nil then
			drag:addData("imageURL", _imageURL);
		end;
	</event>
</form>